{"version":3,"sources":["_constants/alert.constants.js","_constants/user.constants.js","_actions/alert.actions.js","_services/user.service.js","_helpers/fake-backend.js","_helpers/history.js","_reducers/authentication.reducer.js","_reducers/index.js","_reducers/alert.reducer.js","_helpers/store.js","_actions/user.actions.js","LoginPage/LoginPage.jsx","HomePage/ListTree.js","HomePage/AddItem.js","HomePage/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["alertConstants","userConstants","alertActions","success","message","type","info","error","clear","userService","login","logout","delete","getlist","additem","base_url","username","password","a","requestOptions","method","headers","body","JSON","stringify","fetch","response","handleResponse","user","localStorage","setItem","userID","token","removeItem","itemID","data","newitem","text","then","ok","parse","Promise","reject","statusText","status","getItem","history","createBrowserHistory","initialStae","loggedIn","rootReducer","combineReducers","alert","state","action","alertClass","authentication","loggingIn","fetching","list","added","delItem","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","userActions","navigate","dispatch","getList","id","failure","toString","index","splice","resetAlert","addItem","nid","push","register","request","getAll","users","LoginPage","useState","inputs","setInputs","submitted","setSubmitted","useSelector","useDispatch","useNavigate","handleChange","e","target","name","value","className","onSubmit","preventDefault","onChange","ListTree","useEffect","setTimeout","console","log","onClick","map","item","Date","deleteItem","icon","faTrash","AddItem","newItem","setNewItem","placeholder","HomePage","firstName","App","loggedin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.2e537a7f.chunk.js","sourcesContent":["export const alertConstants = {\r\n    REQUEST: 'ALERT_REQUEST',\r\n    SUCCESS: 'ALERT_SUCCESS',\r\n    ERROR: 'ALERT_ERROR',\r\n    CLEAR: 'ALERT_CLEAR',\r\n    INFO:'ALERT_INFO'\r\n};\r\n","export const userConstants = {\r\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\r\n\r\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n    \r\n    LOGOUT: 'USERS_LOGOUT',\r\n\r\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\r\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\r\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\r\n\r\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\r\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\r\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE',\r\n\r\n    FETCH_REQUEST: 'USERS_FETCH_REQUEST',\r\n    FETCH_SUCCESS: 'USERS_FETCH_SUCCESS',\r\n    FETCH_FAILURE: 'USERS_FETCH_FAILURE',\r\n\r\n    ADDED_SUCCESS: 'ADDED_ITEM_SUCCESS',\r\n\r\n    RESET_INPUT: 'RESET_INPUT_FIELD'\r\n    \r\n};\r\n","import { alertConstants } from '../_constants';\r\n\r\nexport const alertActions = {\r\n    success,\r\n    info,\r\n    error,\r\n    clear\r\n};\r\n\r\nfunction success(message) {\r\n    return { type: alertConstants.SUCCESS, message };\r\n}\r\nfunction info(message) {\r\n    return { type: alertConstants.INFO, message };\r\n}\r\n\r\nfunction error(message) {\r\n    return { type: alertConstants.ERROR, message:message };\r\n}\r\n\r\nfunction clear() {\r\n    return { type: alertConstants.CLEAR };\r\n}","\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    delete: _delete,\r\n    getlist,\r\n    additem\r\n};\r\nconst base_url='http://localhost:5000/'\r\nasync function login(username, password) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password })\r\n    };\r\n\r\n    const response = await fetch(base_url+'users/authenticate', requestOptions);\r\n    const user = await handleResponse(response);\r\n    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    return user;\r\n}\r\n\r\nasync function logout(userID,token) {\r\n    // remove user from local storage to log user out\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username:userID,token})\r\n    };\r\n\r\n    const response = await fetch(base_url+'users/logout', requestOptions);\r\n    localStorage.removeItem('user');\r\n    return handleResponse(response);\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nasync function _delete(userID,token,itemID) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username:userID,token,itemID })\r\n    };\r\n\r\n    const response = await fetch(base_url+'users/delete', requestOptions);\r\n    return handleResponse(response);\r\n}\r\n\r\nasync function getlist(userID, token) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username:userID, token })\r\n    };\r\n\r\n    const response = await fetch(base_url+'users/getlist', requestOptions);\r\n    const data = await handleResponse(response);\r\n    return data;\r\n}\r\n\r\nasync function additem(userID,token,newitem){\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username:userID, token,newitem })\r\n    };\r\n\r\n    const response = await fetch(base_url+'users/additem', requestOptions);\r\n    const data = await handleResponse(response);\r\n    return data;\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n            }\r\n            if(response.status===500) return Promise.reject(response.statusText);\r\n            const data = text && JSON.parse(text);\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        else{ \r\n            const data = text && JSON.parse(text);\r\n            if(data.ok){\r\n            return data;\r\n            }\r\n            else return Promise.reject(data.statusText);\r\n        }\r\n        \r\n        \r\n    });\r\n}","// array in local storage for registered users\r\nlet users = JSON.parse(localStorage.getItem('users')) || [];\r\n    \r\nexport function configureFakeBackend() {\r\n    let realFetch = window.fetch;\r\n    window.fetch = function (url, opts) {\r\n        const { method, headers } = opts;\r\n        const body = opts.body && JSON.parse(opts.body);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            // wrap in timeout to simulate server api call\r\n            setTimeout(handleRoute, 500);\r\n\r\n            function handleRoute() {\r\n                switch (true) {\r\n                    case url.endsWith('/users/authenticate') && method === 'POST':\r\n                        return authenticate();\r\n                    case url.endsWith('/users/register') && method === 'POST':\r\n                        return register();\r\n                    case url.endsWith('/users') && method === 'GET':\r\n                        return getUsers();\r\n                    case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n                        return deleteUser();\r\n                    default:\r\n                        // pass through any requests not handled above\r\n                        return realFetch(url, opts)\r\n                            .then(response => resolve(response))\r\n                            .catch(error => reject(error));\r\n                }\r\n            }\r\n\r\n            // route functions\r\n\r\n            function authenticate() {\r\n                const { username, password } = body;\r\n                const user = users.find(x => x.username === username && x.password === password);\r\n                if (!user) return error('Username or password is incorrect');\r\n                return ok({\r\n                    id: user.id,\r\n                    username: user.username,\r\n                    firstName: user.firstName,\r\n                    lastName: user.lastName,\r\n                    token: 'fake-jwt-token'\r\n                });\r\n            }\r\n\r\n            function register() {\r\n                const user = body;\r\n    \r\n                if (users.find(x => x.username === user.username)) {\r\n                    return error(`Username  ${user.username} is already taken`);\r\n                }\r\n    \r\n                // assign user id and a few other properties then save\r\n                user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n                users.push(user);\r\n                localStorage.setItem('users', JSON.stringify(users));\r\n\r\n                return ok();\r\n            }\r\n    \r\n            function getUsers() {\r\n                if (!isLoggedIn()) return unauthorized();\r\n\r\n                return ok(users);\r\n            }\r\n    \r\n            function deleteUser() {\r\n                if (!isLoggedIn()) return unauthorized();\r\n    \r\n                users = users.filter(x => x.id !== idFromUrl());\r\n                localStorage.setItem('users', JSON.stringify(users));\r\n                return ok();\r\n            }\r\n\r\n            // helper functions\r\n\r\n            function ok(body) {\r\n                resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) });\r\n            }\r\n\r\n            function unauthorized() {\r\n                resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorized' })) });\r\n            }\r\n\r\n            function error(message) {\r\n                resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) });\r\n            }\r\n\r\n            function isLoggedIn() {\r\n                return headers['Authorization'] === 'Bearer fake-jwt-token';\r\n            }\r\n    \r\n            function idFromUrl() {\r\n                const urlParts = url.split('/');\r\n                return parseInt(urlParts[urlParts.length - 1]);\r\n            }\r\n        });\r\n    }\r\n}","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import { userConstants } from '../_constants';\r\nlet user = JSON.parse(localStorage.getItem('user'));\r\nconst initialStae = user ? { loggedIn: true, user } : {};\r\n\r\nexport function authentication(state = initialStae, action) {\r\n    switch (action.type) {\r\n        case userConstants.LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loggingIn: true,\r\n                user: action.user\r\n\r\n            };\r\n        case userConstants.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loggedIn: true,\r\n                loggingIn: false,\r\n                user: action.user\r\n\r\n            };\r\n        case userConstants.LOGIN_FAILURE:\r\n            return {};\r\n        case userConstants.LOGOUT:\r\n            return {};\r\n        case userConstants.FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                fetching: true\r\n            };\r\n        case userConstants.FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                fetching: false,\r\n                list: action.data\r\n            };\r\n        case userConstants.FETCH_FAILURE:\r\n            return {\r\n                ...state,\r\n                fetching: false\r\n            };\r\n            case userConstants.ADDED_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    added: true,\r\n                    list: action.data\r\n                };\r\n                case userConstants.RESET_INPUT:\r\n                    return {\r\n                        ...state,\r\n                        added: false\r\n                    };\r\n        case userConstants.DELETE_REQUEST:\r\n            return {\r\n                ...state,\r\n                delItem: true\r\n\r\n            };\r\n        case userConstants.DELETE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: action.data,\r\n                delItem: false\r\n            };\r\n        case userConstants.DELETE_FAILURE:\r\n            return {\r\n                ...state,\r\n                delItem: false\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { authentication } from './authentication.reducer';\r\nimport { alert } from './alert.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    alert,\r\n    authentication\r\n});\r\n\r\nexport default rootReducer;","import { alertConstants } from '../_constants';\r\n\r\nexport function alert(state={} , action) {\r\n  \r\n    switch (action.type) {\r\n        case alertConstants.REQUEST:\r\n            return {\r\n                ...state,\r\n                alertClass: 'alert-request',\r\n                message: action.message\r\n                \r\n            };\r\n        case alertConstants.SUCCESS:\r\n            return {\r\n                ...state,\r\n                alertClass: 'alert-success',\r\n                message: action.message\r\n            };\r\n        case alertConstants.INFO:\r\n                return {\r\n                    ...state,\r\n                    alertClass: 'alert-info',\r\n                    message: action.message\r\n                };\r\n        case alertConstants.ERROR:\r\n            return {\r\n                ...state,\r\n                alertClass: 'alert-danger',\r\n                message: action.message\r\n            };\r\n        case alertConstants.CLEAR:\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n//import { createLogger } from 'redux-logger';\r\nimport rootReducer from '../_reducers';\r\nimport { composeWithDevTools } from '@redux-devtools/extension';\r\n//const loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools( \r\n        applyMiddleware(\r\n        thunkMiddleware,\r\n       // loggerMiddleware\r\n    )) \r\n);","import { userConstants } from '../_constants';\r\nimport { alertConstants } from '../_constants';\r\nimport { userService } from '../_services';\r\nimport { alertActions } from './';\r\nimport { history } from '../_helpers';\r\n\r\n\r\nexport const userActions = {\r\n    login,\r\n    logout,\r\n    delete: _delete,\r\n    resetAlert,\r\n    getList,\r\n    addItem,\r\n    register,\r\n    getAll\r\n};\r\n\r\nfunction login(username, password, navigate) {\r\n\r\n    return dispatch => {\r\n        dispatch(request({ username }));\r\n\r\n        userService.login(username, password)\r\n            .then(\r\n                user => { \r\n                    \r\n                    dispatch(success(user));\r\n                    dispatch({ type: alertConstants.SUCCESS,message:\"Loggged in successfully\"  });\r\n                    navigate('/home');\r\n                    dispatch(getList(user.id, user.token));\r\n                },\r\n                error => {\r\n                \r\n                    dispatch(failure(error.toString()));\r\n                    dispatch(alertActions.error(error.toString()));\r\n              \r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\nfunction logout(userID,token) {\r\n    return dispatch=> { \r\n        userService.logout(userID,token)\r\n        .then(data=>{\r\n            \r\n            dispatch({ type: userConstants.LOGOUT });\r\n            dispatch({  type: alertConstants.INFO,message:data.statusText });\r\n        },\r\n        error=>{\r\n            dispatch(alertActions.error(error.toString()));\r\n        }\r\n        )\r\n    };\r\n\r\n}\r\n\r\nfunction resetAlert(){\r\n    return {type:alertConstants.CLEAR}\r\n}\r\n\r\nfunction getList(userID,token){\r\n    return dispatch => {\r\n        //set here status to data coming(spiner use)\r\n        dispatch({type:userConstants.FETCH_REQUEST})\r\n\r\n        userService.getlist(userID,token)\r\n            .then(\r\n                data => { \r\n                    dispatch({type:userConstants.FETCH_SUCCESS,data:data.list});\r\n                },\r\n                error => {\r\n                    //you can set flag no_load then give a button to reload\r\n                    dispatch({type:userConstants.FETCH_FAILURE})\r\n                    dispatch(alertActions.error(error.toString()));\r\n              \r\n                }\r\n            );\r\n    };\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(userID,token,data,itemID,index) {\r\n    return dispatch => {\r\n        dispatch(request());\r\n        userService.delete(userID,token,itemID)\r\n            .then(\r\n                user =>{ \r\n                        //console.log(data)\r\n                        //change data item or delete\r\n                        data.splice(index,1)\r\n                        dispatch(success(data))\r\n                        dispatch({type:alertConstants.SUCCESS,message:\"Deleted Successfully\"}) \r\n                },\r\n                error => {dispatch(failure( error.toString()))\r\n                        dispatch({type:alertConstants.ERROR,message:error.toString()}) \r\n                }\r\n            );\r\n    };\r\n\r\n    function request() { return { type: userConstants.DELETE_REQUEST } }\r\n    function success(data) { return { type: userConstants.DELETE_SUCCESS,data } }\r\n    function failure( error) { return { type: userConstants.DELETE_FAILURE, error } }\r\n}\r\n\r\nfunction addItem(userID,token,newitem,list){\r\n    return dispatch => {\r\n        userService.additem(userID,token,newitem)\r\n            .then(\r\n                data => {\r\n                    const nid=data.id\r\n                    list.push([newitem,nid])\r\n                    dispatch(alertActions.success('Successfully added'));\r\n                    dispatch({type:userConstants.ADDED_SUCCESS,data:list});//here you may use explicit userconst for added\r\n                    \r\n                },\r\n                error => {\r\n                    dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nfunction register(user) {\r\n    return dispatch => {\r\n        dispatch(request(user));\r\n\r\n        userService.register(user)\r\n            .then(\r\n                user => { \r\n                    dispatch(success());\r\n                    history.push('/login');\r\n                    dispatch(alertActions.success('Registration successful'));\r\n                },\r\n                error => {\r\n                    dispatch(failure(error.toString()));\r\n                    dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\r\n}\r\n\r\nfunction getAll() {\r\n    return dispatch => {\r\n        dispatch(request());\r\n\r\n        userService.getAll()\r\n            .then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error.toString()))\r\n            );\r\n    };\r\n\r\n    function request() { return { type: userConstants.GETALL_REQUEST } }\r\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\r\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n//import { Link, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { userActions } from '../_actions';\r\n\r\nfunction LoginPage() {\r\n    const [inputs, setInputs] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const { username, password } = inputs;\r\n    const loggingIn = useSelector(state => state.authentication.loggingIn);\r\n    const dispatch = useDispatch();\r\n    const navigate=useNavigate();\r\n    //const location = useLocation();\r\n    // reset login status\r\n/*\r\n    useEffect(() => { \r\n        dispatch(userActions.logout()); \r\n    }, []);*/\r\n\r\n    function handleChange(e) {\r\n        const { name, value } = e.target;\r\n        setInputs(inputs => ({ ...inputs, [name]: value }));\r\n        //console.log(\"change\",value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (username && password) {\r\n           dispatch(userActions.login(username, password,navigate));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-lg-6\">\r\n\r\n            <h2>Login</h2>\r\n            <form name=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input type=\"text\" name=\"username\" value={username} onChange={handleChange} className={'form-control' + (submitted && !username ? ' is-invalid' : '')} />\r\n                    {submitted && !username &&\r\n                        <div className=\"invalid-feedback\">Username is required</div>\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" name=\"password\" value={password} onChange={handleChange} className={'form-control' + (submitted && !password ? ' is-invalid' : '')} />\r\n                    {submitted && !password &&\r\n                        <div className=\"invalid-feedback\">Password is required</div>\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary\">\r\n                        {loggingIn && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                        Login\r\n                    </button>\r\n                   \r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { LoginPage };","import './ListTree.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { userActions } from '../_actions';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nfunction ListTree() {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.authentication.user)\r\n    const list = useSelector(state => state.authentication.list)\r\n    const fetching = useSelector(state => state.authentication.fetching)\r\n    function deleteItem(itemID, index) {\r\n        dispatch(userActions.delete(user.id, user.token, list, itemID, index))\r\n    }\r\n    useEffect(() => {\r\n        if (!list && !fetching && user.token)\r\n            setTimeout(() => {\r\n                console.log('nothing')\r\n                //dispatch(userActions.getList(user.id, user.token))\r\n            }\r\n                , 3000);\r\n    });\r\n    function Retry_Fetch(e) {\r\n        dispatch(userActions.getList(user.id, user.token))\r\n        console.log(\"dv\", user)\r\n    }\r\n    return (\r\n        <>{fetching && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n\r\n            {!list && !fetching &&\r\n                <>\r\n                    <span>...OOPS </span><br/>\r\n                    <button className=\"btn btn-light\" onClick={Retry_Fetch}>\r\n                        RETRY\r\n                    </button>\r\n                </>}\r\n            {list && list.map((item, index) =>\r\n                <div className={`list-item-div ${!(index % 2) ? 'altclr' : ''}`} key={index + `${item[1]}`}>\r\n                    <span >\r\n                        {item[0] + \"-\" + new Date(item[1] * 100+16000000000)}\r\n                    </span>\r\n                    <button onClick={() => deleteItem(item[1], index)}><FontAwesomeIcon icon={faTrash} /></button>\r\n                </div>\r\n            )}\r\n\r\n        </>\r\n    );\r\n}\r\nexport default ListTree;","import React,{useEffect, useState} from 'react';\r\nimport './AddItem.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { alertActions, userActions } from '../_actions';\r\nimport { userConstants } from '../_constants';\r\n//import { isElementOfType } from 'react-dom/test-utils';\r\n//import { response } from 'express';\r\n\r\nfunction AddItem() {\r\n    const [newItem, setNewItem] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const dispatch=useDispatch();\r\n    const user=useSelector(state=>state.authentication.user);\r\n    const list=useSelector(state=>state.authentication.list);\r\n    function handleChange(e) {\r\n        const { value } = e.target;\r\n        setNewItem(value);\r\n        //console.log(\"change\",value)\r\n    }\r\n    const added=useSelector(state=>state.authentication.added);\r\n    if (added){ setNewItem('');\r\n    dispatch({type:userConstants.RESET_INPUT})}\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (newItem) {\r\n           dispatch(userActions.addItem(user.id,user.token,newItem,list));\r\n           setSubmitted(false);\r\n        }else{\r\n            dispatch(alertActions.error(\"Empty element can't be added !\"))\r\n        }\r\n    }\r\n    return (\r\n        <div className='add_item_parent_div'>\r\n            <div>\r\n                <input onChange={handleChange} name='newItem' value={newItem}  placeholder=\"Add new___\" /> \r\n                <button onClick={handleSubmit} type=\"button\">+Add</button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddItem;","//import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//let user = JSON.parse(localStorage.getItem('user'));\r\nimport { userActions } from '../_actions';\r\nimport ListTree from './ListTree'\r\nimport AddItem from './AddItem';\r\nfunction HomePage() {\r\n\r\n    const user = useSelector(state => state.authentication.user);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    function logout() {\r\n        dispatch(userActions.logout(user.username,user.token));\r\n        navigate('/login')\r\n    }\r\n    return (\r\n        <div >\r\n            <div className='username_logout_div'>\r\n                <h1>Hi {user.firstName}!</h1>\r\n                <button className='' onClick={logout}>Logout</button>\r\n            </div>\r\n            <AddItem/>\r\n            <ListTree />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { HomePage };","import { useSelector , useDispatch} from 'react-redux';\n//import { useEffect } from 'react';\nimport { LoginPage } from './LoginPage/'\nimport { HomePage } from './HomePage/'\nimport { userActions } from './_actions';\n\nfunction App() {\n  const loggedin = useSelector(state => state.authentication.loggedIn);\n  const alert = useSelector(state => state.alert);\n  const dispatch = useDispatch();\n  if (alert.alertClass) setTimeout(()=>dispatch(userActions.resetAlert()),2500);\n  \n  return (\n    <div>\n      <div className='alertBox col-7 offset-2 col-md-5 offset-md-3'>{alert.alertClass && <div className={`alert ${alert.alertClass}`}> {alert.message} </div>}</div>\n      <div className='main col-10 offset-1 col-sm-7 offset-sm-2'>\n      {loggedin ? <HomePage /> : <LoginPage />}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './App.css'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './_helpers'\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Routes>\n        <Route path=\"*\" element={<App className={'app'} />} />\n      </Routes>\n    </Router>\n\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}